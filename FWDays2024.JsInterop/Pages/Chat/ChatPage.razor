@page "/chat"
@using System.Globalization
@inject HttpClient Http

<div class="box box-warning direct-chat direct-chat-warning">
    <div class="box-header with-border">
        <h3 class="box-title">Chat Messages</h3>

        <div class="box-tools pull-right">
            <span data-toggle="tooltip" title="" class="badge bg-yellow" data-original-title="3 New Messages">@(messages != null ? messages.Count(): "")</span>
        </div>
    </div>

    <div class="box-body">
        <div class="direct-chat-messages">
        @if (messages != null && messages.Any())
        {
            foreach (var message in messages)
            {
                if (message.Id == _dividerMessage)
                {
                    <NewMessagesDivider />
                }
                 <div class="@($"{(message.IsMyMessage ? "right" : "")} direct-chat-msg")">
                    <div class="direct-chat-info clearfix">
                        <span class="direct-chat-name pull-left">@message.FullName</span>
                        <span class="direct-chat-timestamp pull-right">@message.DateTime</span>
                    </div>
                    <img class="direct-chat-img" src="@message.Picture" alt="message user image"> 
                    <div class="direct-chat-text"> 
                        @message.Content
                    </div>

                </div>  
            }
        }
        </div>
    </div>

    <div class="box-footer">
        <form action="#" method="post">
            <div class="input-group">
                <input type="text" name="message" placeholder="Type Message ..." class="form-control">
                <span class="input-group-btn">
                    <button type="button" class="btn btn-warning btn-flat">Send</button>
                </span>
            </div>
        </form>
    </div>

</div>

@code{

    private IList<ChatMessageRecord>? messages = new List<ChatMessageRecord>();
    private Guid? _dividerMessage;
    private int take = 20;
    private int currentPage = 0;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadNextBunch();

        _dividerMessage = PositionOfDivider();
        StateHasChanged();
    }

    public async Task LoadNextBunch()
    {
        var result = (await Http.GetFromJsonAsync<ChatMessageRecord[]>("sample-data/chat.json"))
            .Reverse()
            .Skip(take * currentPage).Take(take)
            .Select(x => x with {Id = Guid.NewGuid()});

       messages = messages.Concat(result.Reverse().ToList()).ToList();
       currentPage++;
       StateHasChanged();
    }

    public Guid? PositionOfDivider()
    {
        var id = messages?.OrderByDescending(x =>
        {
            string format = "dd MMM h:mm tt";
            CultureInfo provider = CultureInfo.InvariantCulture;
            DateTime dateTime;
            DateTime.TryParseExact(x.DateTime, format, provider, DateTimeStyles.None, out dateTime);
            return dateTime;
        }).TakeWhile(x => !x.IsMyMessage).Last().Id;

        return id;
    }
    
    record ChatMessageRecord(string FullName, string DateTime, string Picture, string Content, bool IsMyMessage, Guid Id);
}